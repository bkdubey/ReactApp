{"ast":null,"code":"import _defineProperty from \"E:\\\\UI\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\UI\\\\react-complete-guide\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport classes from \"./App.css\"; // the name is up to y\n\nimport Person from \"./Person/Person\"; //using radium in this module\n// This covers basic section of react , need to add advance topic as well \n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //this is an array of person\n      persons: [{\n        id: \"1\",\n        name: \"braj\",\n        age: \"28\"\n      }, {\n        id: \"2\",\n        name: \"kishore\",\n        age: \"25\"\n      }, {\n        id: \"3\",\n        name: \"test\",\n        age: \"15\"\n      }],\n      otherState: \"some other value\",\n      showPersons: false\n    };\n\n    this.switchNameHandler = newName => {\n      console.log(\"was clicked \"); // react will not recognise this change and will not pick up\n      //this.state.person[0].name = \"braj kisore\";\n      // updating dom , this setstate available only in class component\n\n      this.setState({\n        persons: [{\n          name: newName,\n          age: \"28\"\n        }, {\n          name: \"kishore\",\n          age: \"25\"\n        }, {\n          name: \"dubey\",\n          age: \"15\"\n        }]\n      });\n    };\n\n    this.nameChangeHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n\n      const person = _objectSpread({}, this.state.persons[personIndex]); // or const person = Object.assign({}, this.state.persons[peronIndex])\n\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons; or\n      // const persons = [...this.state.persons] (recommended one) (\"...\" spread out the element )or\n      const persons = this.state.persons.slice();\n      persons.splice(personIndex, 1); // for removing element from array\n\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonHandler = () => {\n      console.log(\"toggle handling\");\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"green\",\n      color: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\"\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.persons.map((person, index) => {\n        return React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          key: person.id,\n          changed: event => this.nameChangeHandler(event, person.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }));\n      style.backgroundColor = \"red\";\n    } //let classes = [\"red\", \"bold\"].join(\" \"); // this is valid css class , \"red bold\"\n\n\n    const classes = []; // creating an empty arry\n\n    if (this.state.persons.length <= 2) {\n      classes.push(\"red\"); // classes=['red']\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push(\"bold\"); // classes=['red','bold']\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" hello react\"), React.createElement(\"p\", {\n      className: classes.join(\" \"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" This is really working !\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" \", \"Toggle person\", \" \"), persons);\n  }\n\n}\n\nexport default App;\n\nfunction App1() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \" hello react\"));\n}","map":{"version":3,"sources":["E:\\UI\\react-complete-guide\\src\\App.js"],"names":["React","Component","classes","Person","App","state","persons","id","name","age","otherState","showPersons","switchNameHandler","newName","console","log","setState","nameChangeHandler","event","personIndex","findIndex","p","person","target","value","deletePersonHandler","slice","splice","togglePersonHandler","doesShow","render","style","backgroundColor","color","font","border","padding","cursor","map","index","length","push","join","App1"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from  \"./App.css\"; // the name is up to y\nimport Person from \"./Person/Person\";\n//using radium in this module\n// This covers basic section of react , need to add advance topic as well \nclass App extends Component {\n  state = {\n    //this is an array of person\n    persons: [\n      { id: \"1\", name: \"braj\", age: \"28\" },\n      { id: \"2\", name: \"kishore\", age: \"25\" },\n      { id: \"3\", name: \"test\", age: \"15\" }\n    ],\n    otherState: \"some other value\",\n    showPersons: false\n  };\n\n  switchNameHandler = newName => {\n    console.log(\"was clicked \");\n    // react will not recognise this change and will not pick up\n    //this.state.person[0].name = \"braj kisore\";\n\n    // updating dom , this setstate available only in class component\n    this.setState({\n      persons: [\n        { name: newName, age: \"28\" },\n        { name: \"kishore\", age: \"25\" },\n        { name: \"dubey\", age: \"15\" }\n      ]\n    });\n  };\n\n  nameChangeHandler = (event, id) => {\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = { ...this.state.persons[personIndex] };\n    // or const person = Object.assign({}, this.state.persons[peronIndex])\n    person.name = event.target.value;\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n    this.setState({ persons: persons });\n  };\n\n  deletePersonHandler = personIndex => {\n    // const persons = this.state.persons; or\n    // const persons = [...this.state.persons] (recommended one) (\"...\" spread out the element )or\n    const persons = this.state.persons.slice();\n\n    persons.splice(personIndex, 1); // for removing element from array\n    this.setState({ persons: persons });\n  };\n\n  togglePersonHandler = () => {\n    console.log(\"toggle handling\");\n    const doesShow = this.state.showPersons;\n    this.setState({ showPersons: !doesShow });\n  };\n  render() {\n    const style = {\n      backgroundColor: \"green\",\n      color: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\",\n    };\n\n    let persons = null;\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return (\n              <Person\n                click={() => this.deletePersonHandler(index)}\n                name={person.name}\n                age={person.age}\n                key={person.id}\n                changed={event => this.nameChangeHandler(event, person.id)}\n              />\n            );\n          })}\n        </div>\n      );\n      style.backgroundColor = \"red\";\n     \n    } \n\n    //let classes = [\"red\", \"bold\"].join(\" \"); // this is valid css class , \"red bold\"\n    const classes = []; // creating an empty arry\n    if (this.state.persons.length <= 2) {\n      classes.push(\"red\"); // classes=['red']\n    }\n    if (this.state.persons.length <= 1) {\n      classes.push(\"bold\"); // classes=['red','bold']\n    }\n\n    return (\n      \n        <div className=\"App\">\n          <h1> hello react</h1>\n          <p className={classes.join(\" \")}> This is really working !</p>\n          <button style={style} onClick={this.togglePersonHandler}>\n            {/* this is comment\n          onClick={this.switchNameHandler.bind(this, \"brajkishore\")\n          or can use - \n            () => this.switchNameHandler(\"BrajKishore!\")\n            in above syntax implicitly added return statement after \"=>\"\n            now we can add paramter \"()\" it will execute in onclick only \n\n            recommended :- bind syntax\n          */}{\" \"}\n            Toggle person{\" \"}\n          </button>\n          {persons}\n        </div>\n    );\n  }\n}\n\nexport default App;\n\nfunction App1() {\n  return (\n    <div className=\"App\">\n      <h1> hello react</h1>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}