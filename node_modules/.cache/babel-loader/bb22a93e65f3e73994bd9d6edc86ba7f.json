{"ast":null,"code":"import _slicedToArray from \"E:\\\\UI\\\\react-complete-guide\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\UI\\\\react-complete-guide\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nconst App = props => {\n  // const stateArr= useState({  or\n  const _useState = useState({\n    person: [{\n      name: \"braj\",\n      age: \"28\"\n    }, {\n      name: \"kishore\",\n      age: \"25\"\n    }, {\n      name: \"test\",\n      age: \"15\"\n    }],\n    otherState: \"some other value\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        personState = _useState2[0],\n        setPersonState = _useState2[1]; // you can have n number of usestate in functional\n\n\n  const _useState3 = useState(\"some other value\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        otherState = _useState4[0],\n        setOtherState = _useState4[1]; // donot want to update setOtherState\n\n\n  console.log(personState, otherState);\n\n  const switchNameHandler = () => {\n    console.log(\"was clicked \"); // react will not recognise this change and will not pick up\n    //this.state.person[0].name = \"braj kisore\";\n    // updating dom , this setstate available only in class component\n\n    setPersonState({\n      person: [{\n        name: \"braj kishore\",\n        age: \"28\"\n      }, {\n        name: \"kishore\",\n        age: \"25\"\n      }, {\n        name: \"dubey\",\n        age: \"15\"\n      }] // we can do this , but this is not deligate way ,to do it manually\n      //otherState: personState.otherState\n\n    });\n  }; //console.log(setPersonState);\n\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" hello react\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"this is really working !\"), React.createElement(\"button\", {\n    onClick: switchNameHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" Switch name \"), React.createElement(Person, {\n    name: personState.person[0].name,\n    age: personState.person[0].age,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Person, {\n    name: personState.person[1].name,\n    age: personState.person[1].age,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"my Hobbies :- coding\", \" \"), React.createElement(Person, {\n    name: personState.person[2].name,\n    age: personState.person[2].age,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nexport default App;\n\nfunction App1() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \" hello react\"));\n}","map":{"version":3,"sources":["E:\\UI\\react-complete-guide\\src\\App.js"],"names":["React","useState","Person","App","props","person","name","age","otherState","personState","setPersonState","setOtherState","console","log","switchNameHandler","App1"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB;AADmB,oBAEmBH,QAAQ,CAAC;AAC7CI,IAAAA,MAAM,EAAE,CACN;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,GAAG,EAAE;AAArB,KADM,EAEN;AAAED,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,GAAG,EAAE;AAAxB,KAFM,EAGN;AAAED,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,GAAG,EAAE;AAArB,KAHM,CADqC;AAM7CC,IAAAA,UAAU,EAAE;AANiC,GAAD,CAF3B;AAAA;AAAA,QAEZC,WAFY;AAAA,QAECC,cAFD,kBAWnB;;;AAXmB,qBAYiBT,QAAQ,CAAC,kBAAD,CAZzB;AAAA;AAAA,QAYZO,UAZY;AAAA,QAYAG,aAZA,kBAanB;;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ,EAAyBD,UAAzB;;AAEA,QAAMM,iBAAiB,GAAG,MAAM;AAC9BF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAD8B,CAE9B;AACA;AAEA;;AACAH,IAAAA,cAAc,CAAC;AACbL,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,GAAG,EAAE;AAA7B,OADM,EAEN;AAAED,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,GAAG,EAAE;AAAxB,OAFM,EAGN;AAAED,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,GAAG,EAAE;AAAtB,OAHM,CADK,CAOb;AACA;;AARa,KAAD,CAAd;AAUD,GAhBD,CAjBmB,CAmCnB;;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,EAGE;AAAQ,IAAA,OAAO,EAAEO,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,EAIE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEL,WAAW,CAACJ,MAAZ,CAAmB,CAAnB,EAAsBC,IAD9B;AAEE,IAAA,GAAG,EAAEG,WAAW,CAACJ,MAAZ,CAAmB,CAAnB,EAAsBE,GAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEE,WAAW,CAACJ,MAAZ,CAAmB,CAAnB,EAAsBC,IAApC;AAA0C,IAAA,GAAG,EAAEG,WAAW,CAACJ,MAAZ,CAAmB,CAAnB,EAAsBE,GAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuB,GADvB,CARF,EAWE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEE,WAAW,CAACJ,MAAZ,CAAmB,CAAnB,EAAsBC,IAD9B;AAEE,IAAA,GAAG,EAAEG,WAAW,CAACJ,MAAZ,CAAmB,CAAnB,EAAsBE,GAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAkBD,CAvDD;;AAyDA,eAAeJ,GAAf;;AAEA,SAASY,IAAT,GAAgB;AACd,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nconst App = props => {\n  // const stateArr= useState({  or\n  const [personState, setPersonState] = useState({\n    person: [\n      { name: \"braj\", age: \"28\" },\n      { name: \"kishore\", age: \"25\" },\n      { name: \"test\", age: \"15\" }\n    ],\n    otherState: \"some other value\"\n  });\n\n  // you can have n number of usestate in functional\n  const [otherState, setOtherState] = useState(\"some other value\");\n  // donot want to update setOtherState\n\n  console.log(personState, otherState);\n\n  const switchNameHandler = () => {\n    console.log(\"was clicked \");\n    // react will not recognise this change and will not pick up\n    //this.state.person[0].name = \"braj kisore\";\n\n    // updating dom , this setstate available only in class component\n    setPersonState({\n      person: [\n        { name: \"braj kishore\", age: \"28\" },\n        { name: \"kishore\", age: \"25\" },\n        { name: \"dubey\", age: \"15\" }\n      ]\n\n      // we can do this , but this is not deligate way ,to do it manually\n      //otherState: personState.otherState\n    });\n  };\n\n  //console.log(setPersonState);\n\n  return (\n    <div className=\"App\">\n      <h1> hello react</h1>\n      <p>this is really working !</p>\n      <button onClick={switchNameHandler}> Switch name </button>\n      <Person\n        name={personState.person[0].name}\n        age={personState.person[0].age}\n      />\n      <Person name={personState.person[1].name} age={personState.person[1].age}>\n        my Hobbies :- coding{\" \"}\n      </Person>\n      <Person\n        name={personState.person[2].name}\n        age={personState.person[2].age}\n      />\n    </div>\n  );\n};\n\nexport default App;\n\nfunction App1() {\n  return (\n    <div className=\"App\">\n      <h1> hello react</h1>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}