{"ast":null,"code":"var _jsxFileName = \"E:\\\\UI\\\\react-complete-guide\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //this is an array of person\n      person: [{\n        name: \"braj\",\n        age: \"28\"\n      }, {\n        name: \"kishore\",\n        age: \"25\"\n      }, {\n        name: \"test\",\n        age: \"15\"\n      }],\n      otherState: \"some other value\",\n      showPersons: false\n    };\n\n    this.switchNameHandler = newName => {\n      console.log(\"was clicked \"); // react will not recognise this change and will not pick up\n      //this.state.person[0].name = \"braj kisore\";\n      // updating dom , this setstate available only in class component\n\n      this.setState({\n        person: [{\n          name: newName,\n          age: \"28\"\n        }, {\n          name: \"kishore\",\n          age: \"25\"\n        }, {\n          name: \"dubey\",\n          age: \"15\"\n        }]\n      });\n    };\n\n    this.nameChangeHandler = event => {\n      this.setState({\n        person: [{\n          name: \"bk\",\n          age: \"28\"\n        }, {\n          name: event.target.value,\n          age: \"25\"\n        }, {\n          name: \"dubey\",\n          age: \"15\"\n        }]\n      });\n    };\n\n    this.togglePersonHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\"\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" hello react\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"this is really working !\"), React.createElement(\"button\", {\n      style: style,\n      onClick: this.togglePersonHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" \", \"Switch name\", \" \"), this.state.showPersons === true ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Person, {\n      name: this.state.person[0].name,\n      age: this.state.person[0].age,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Person, {\n      name: this.state.person[1].name,\n      age: this.state.person[1].age,\n      click: this.switchNameHandler.bind(this, \"dubey!\"),\n      changed: this.nameChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"my Hobbies :- coding\", \" \"), React.createElement(Person, {\n      name: this.state.person[2].name,\n      age: this.state.person[2].age,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nexport default App;\n\nfunction App1() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \" hello react\"));\n}","map":{"version":3,"sources":["E:\\UI\\react-complete-guide\\src\\App.js"],"names":["React","Component","Person","App","state","person","name","age","otherState","showPersons","switchNameHandler","newName","console","log","setState","nameChangeHandler","event","target","value","togglePersonHandler","doesShow","render","style","backgroundColor","font","border","padding","cursor","bind","App1"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nclass App extends Component {\n  state = {\n    //this is an array of person\n    person: [\n      { name: \"braj\", age: \"28\" },\n      { name: \"kishore\", age: \"25\" },\n      { name: \"test\", age: \"15\" }\n    ],\n    otherState: \"some other value\",\n    showPersons: false\n  };\n\n  switchNameHandler = newName => {\n    console.log(\"was clicked \");\n    // react will not recognise this change and will not pick up\n    //this.state.person[0].name = \"braj kisore\";\n\n    // updating dom , this setstate available only in class component\n    this.setState({\n      person: [\n        { name: newName, age: \"28\" },\n        { name: \"kishore\", age: \"25\" },\n        { name: \"dubey\", age: \"15\" }\n      ]\n    });\n  };\n\n  nameChangeHandler = event => {\n    this.setState({\n      person: [\n        { name: \"bk\", age: \"28\" },\n        { name: event.target.value, age: \"25\" },\n        { name: \"dubey\", age: \"15\" }\n      ]\n    });\n  };\n\n  togglePersonHandler = () => {\nconst doesShow =this.state.showPersons;\nthis.setState({showPersons : !doesShow})\n\n  };\n  render() {\n    const style = {\n      backgroundColor: \"white\",\n      font: \"inherit\",\n      border: \"1px solid blue\",\n      padding: \"8px\",\n      cursor: \"pointer\"\n    };\n\n    return (\n      <div className=\"App\">\n        <h1> hello react</h1>\n        <p>this is really working !</p>\n        <button style={style} onClick={this.togglePersonHandler}>\n          {/* this is comment\n          onClick={this.switchNameHandler.bind(this, \"brajkishore\")\n          or can use - \n            () => this.switchNameHandler(\"BrajKishore!\")\n            in above syntax implicitly added return statement after \"=>\"\n            now we can add paramter \"()\" it will execute in onclick only \n\n            recommended :- bind syntax\n          */}{\" \"}\n          Switch name{\" \"}\n        </button>\n        {this.state.showPersons === true ? (\n          <div>\n            <Person\n              name={this.state.person[0].name}\n              age={this.state.person[0].age}\n            />\n            <Person\n              name={this.state.person[1].name}\n              age={this.state.person[1].age}\n              click={this.switchNameHandler.bind(this, \"dubey!\")}\n              changed={this.nameChangeHandler}\n            >\n              my Hobbies :- coding{\" \"}\n            </Person>\n            <Person\n              name={this.state.person[2].name}\n              age={this.state.person[2].age}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nfunction App1() {\n  return (\n    <div className=\"App\">\n      <h1> hello react</h1>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}