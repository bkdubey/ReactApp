{"ast":null,"code":"var _jsxFileName = \"E:\\\\UI\\\\react-complete-guide\\\\src\\\\components\\\\Cockpit\\\\Cockpit.js\";\nimport React from \"react\";\nimport classes from \"./Cockpit\";\n\nconst cockpit = props => {\n  //let classes = [\"red\", \"bold\"].join(\" \"); // this is valid css class , \"red bold\"\n  const assignedClasses = []; // creating an empty arry\n\n  let btnClass = \"\";\n\n  if (props.showPersons) {\n    btnClass = classes.Red;\n  }\n\n  if (props.state.persons.length <= 2) {\n    assignedClasses.push(classes.red); // classes=['red']\n  }\n\n  if (props.state.persons.length <= 1) {\n    assignedClasses.push(classes.bold); // classes=['red','bold']\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Cockpit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" \", React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" hello react\"), React.createElement(\"p\", {\n    className: assignedClasses.join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" This is really working !\"), React.createElement(\"button\", {\n    className: btnClass,\n    onClick: this.togglePersonHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" \", \"Toggle person\", \" \"), \" \");\n};\n\nexport default cockpit;","map":{"version":3,"sources":["E:\\UI\\react-complete-guide\\src\\components\\Cockpit\\Cockpit.js"],"names":["React","classes","cockpit","props","assignedClasses","btnClass","showPersons","Red","state","persons","length","push","red","bold","Cockpit","join","togglePersonHandler"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB;AACA,QAAMC,eAAe,GAAG,EAAxB,CAFuB,CAEK;;AAE5B,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAIF,KAAK,CAACG,WAAV,EAAuB;AACrBD,IAAAA,QAAQ,GAAGJ,OAAO,CAACM,GAAnB;AACD;;AAED,MAAIJ,KAAK,CAACK,KAAN,CAAYC,OAAZ,CAAoBC,MAApB,IAA8B,CAAlC,EAAqC;AACnCN,IAAAA,eAAe,CAACO,IAAhB,CAAqBV,OAAO,CAACW,GAA7B,EADmC,CACA;AACpC;;AACD,MAAIT,KAAK,CAACK,KAAN,CAAYC,OAAZ,CAAoBC,MAApB,IAA8B,CAAlC,EAAqC;AACnCN,IAAAA,eAAe,CAACO,IAAhB,CAAqBV,OAAO,CAACY,IAA7B,EADmC,CACC;AACrC;;AAED,SACE;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACa,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAG,IAAA,SAAS,EAAEV,eAAe,CAACW,IAAhB,CAAqB,GAArB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJF,EAKE;AAAQ,IAAA,SAAS,EAAEV,QAAnB;AAA6B,IAAA,OAAO,EAAE,KAAKW,mBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,GATJ,mBAUgB,GAVhB,CALF,EAgBY,GAhBZ,CADF;AAoBD,CApCD;;AAsCA,eAAed,OAAf","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Cockpit\";\r\nconst cockpit = props => {\r\n  //let classes = [\"red\", \"bold\"].join(\" \"); // this is valid css class , \"red bold\"\r\n  const assignedClasses = []; // creating an empty arry\r\n\r\n  let btnClass = \"\";\r\n  if (props.showPersons) {\r\n    btnClass = classes.Red;\r\n  }\r\n\r\n  if (props.state.persons.length <= 2) {\r\n    assignedClasses.push(classes.red); // classes=['red']\r\n  }\r\n  if (props.state.persons.length <= 1) {\r\n    assignedClasses.push(classes.bold); // classes=['red','bold']\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Cockpit}>\r\n      {\" \"}\r\n      {/** adding div as jsx can have only one root component */}\r\n      <h1> hello react</h1>\r\n      <p className={assignedClasses.join(\" \")}> This is really working !</p>\r\n      <button className={btnClass} onClick={this.togglePersonHandler}>\r\n        {/* this is comment\r\n      onClick={this.switchNameHandler.bind(this, \"brajkishore\")\r\n      or can use - \r\n        () => this.switchNameHandler(\"BrajKishore!\")\r\n        in above syntax implicitly added return statement after \"=>\"\r\n        now we can add paramter \"()\" it will execute in onclick only \r\n\r\n        recommended :- bind syntax\r\n      */}{\" \"}\r\n        Toggle person{\" \"}\r\n      </button>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default cockpit;\r\n"]},"metadata":{},"sourceType":"module"}